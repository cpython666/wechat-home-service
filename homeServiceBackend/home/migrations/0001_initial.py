# Generated by Django 4.2 on 2024-05-14 12:00

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "creation_time",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="订单创建时间"
                    ),
                ),
                ("start_time", models.DateTimeField(verbose_name="订单开始时间")),
                (
                    "completion_time",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="订单完成时间"
                    ),
                ),
                (
                    "duration",
                    models.IntegerField(
                        help_text="服务时长", verbose_name="服务持续时长"
                    ),
                ),
                (
                    "preferred_date",
                    models.DateField(blank=True, null=True, verbose_name="首选日期"),
                ),
                (
                    "preferred_time",
                    models.TimeField(blank=True, null=True, verbose_name="首选时间"),
                ),
                (
                    "start_photo",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="order_photos/start/",
                        verbose_name="服务开始照片",
                    ),
                ),
                (
                    "end_photo",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="order_photos/end/",
                        verbose_name="服务结束照片",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "待确认"),
                            ("confirmed", "已确认"),
                            ("worker_start", "服务人员开始服务"),
                            ("start", "顾客确认开始服务"),
                            ("in_progress", "进行中"),
                            ("completed", "已完成"),
                            ("cancelled", "已取消"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="订单状态",
                    ),
                ),
                (
                    "feedback",
                    models.TextField(blank=True, null=True, verbose_name="订单反馈"),
                ),
                (
                    "order_rating",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        max_digits=2,
                        null=True,
                        verbose_name="评分",
                    ),
                ),
            ],
            options={
                "verbose_name": "订单档案",
                "verbose_name_plural": "订单档案",
            },
        ),
        migrations.CreateModel(
            name="Service",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="服务名")),
                ("description", models.TextField(verbose_name="服务详情")),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("cleaning", "清洁"),
                            ("cooking", "烹饪"),
                            ("caregiving", "看护"),
                        ],
                        default="cleaning",
                        max_length=50,
                        verbose_name="服务分类",
                    ),
                ),
                (
                    "price_per_hour",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="小时单价"
                    ),
                ),
                ("image_name", models.CharField(max_length=50, null=True)),
            ],
            options={
                "verbose_name": "服务类型",
                "verbose_name_plural": "服务类型",
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "address",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="地址"
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        blank=True, max_length=15, null=True, verbose_name="电话号码"
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        choices=[("private", "私密"), ("male", "男"), ("female", "女")],
                        default="private",
                        max_length=12,
                        verbose_name="性别",
                    ),
                ),
                (
                    "user_type",
                    models.CharField(
                        choices=[
                            ("customer", "顾客"),
                            ("admin", "管理员"),
                            ("worker", "工作人员"),
                        ],
                        default="customer",
                        max_length=10,
                        verbose_name="用户类型",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set_custom",
                        related_query_name="user_custom",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set_custom",
                        related_query_name="user_custom",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "用户档案",
                "verbose_name_plural": "用户档案",
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="WorkerProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "rating",
                    models.DecimalField(
                        decimal_places=1, default=0.0, max_digits=2, verbose_name="评分"
                    ),
                ),
                (
                    "services",
                    models.ManyToManyField(
                        to="home.service", verbose_name="提供的服务"
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="worker_profile",
                        to="home.user",
                    ),
                ),
            ],
            options={
                "verbose_name": "工作人员档案",
                "verbose_name_plural": "工作人员档案",
            },
        ),
        migrations.CreateModel(
            name="Schedule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("work_date", models.DateField(verbose_name="工作日期")),
                ("start_time", models.TimeField(verbose_name="开始时间")),
                ("end_time", models.TimeField(verbose_name="结束时间")),
                (
                    "worker",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="schedules",
                        to="home.workerprofile",
                        verbose_name="工作人员",
                    ),
                ),
            ],
            options={
                "verbose_name": "服务人员排班档案",
                "verbose_name_plural": "服务人员排班档案",
            },
        ),
        migrations.CreateModel(
            name="Review",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "satisfaction",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        max_digits=2,
                        null=True,
                        verbose_name="满意度",
                    ),
                ),
                (
                    "content",
                    models.TextField(
                        blank=True, null=True, verbose_name="投诉与纠纷内容"
                    ),
                ),
                (
                    "resolution",
                    models.TextField(blank=True, null=True, verbose_name="处理结果"),
                ),
                (
                    "order",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="home.order",
                        verbose_name="订单id",
                    ),
                ),
            ],
            options={
                "verbose_name": "投诉与纠纷档案",
                "verbose_name_plural": "投诉与纠纷档案",
            },
        ),
        migrations.AddField(
            model_name="order",
            name="customer",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="customer_orders",
                to="home.user",
                verbose_name="顾客",
            ),
        ),
        migrations.AddField(
            model_name="order",
            name="service",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="home.service",
                verbose_name="服务类型",
            ),
        ),
        migrations.AddField(
            model_name="order",
            name="worker",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="worker_orders",
                to="home.workerprofile",
                verbose_name="工作人员",
            ),
        ),
        migrations.CreateModel(
            name="CustomerProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "preferred_services",
                    models.ManyToManyField(
                        blank=True,
                        help_text="顾客偏好的服务类型",
                        to="home.service",
                        verbose_name="服务偏好",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="customer_profile",
                        to="home.user",
                    ),
                ),
            ],
            options={
                "verbose_name": "顾客档案",
                "verbose_name_plural": "顾客档案",
            },
        ),
        migrations.CreateModel(
            name="Booking",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("booking_date", models.DateField(verbose_name="预约日期")),
                ("booking_time", models.TimeField(verbose_name="预约时间")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "待处理"),
                            ("confirmed", "已确认"),
                            ("completed", "已完成"),
                            ("cancelled", "已取消"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="预约状态",
                    ),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="bookings",
                        to="home.user",
                        verbose_name="顾客",
                    ),
                ),
                (
                    "service",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="home.service",
                        verbose_name="服务",
                    ),
                ),
            ],
            options={
                "verbose_name": "预约档案",
                "verbose_name_plural": "预约档案",
            },
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(
                fields=["username"], name="home_user_usernam_94ce84_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(fields=["email"], name="home_user_email_536475_idx"),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(
                fields=["phone_number"], name="home_user_phone_n_a041f6_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="schedule",
            index=models.Index(
                fields=["work_date"], name="home_schedu_work_da_ce400d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="review",
            index=models.Index(fields=["order"], name="home_review_order_i_9b3f87_idx"),
        ),
        migrations.AddIndex(
            model_name="order",
            index=models.Index(
                fields=["creation_time"], name="home_order_creatio_2d92a5_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="order",
            index=models.Index(
                fields=["start_time"], name="home_order_start_t_8d22d1_idx"
            ),
        ),
    ]
